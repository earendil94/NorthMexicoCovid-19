plot(detrend1,main="remove trend",type="l")
plot(detrend2,main="differentiate",type="l")
m1 <- auto.arima(detrend1,trace=TRUE)
m2 <- auto.arima(detrend2,trace=TRUE)
#now I can apply
acf(detrend1)
pacf(detrend1)
m1 <- auto.arima(detrend1,trace=TRUE)
#now I can apply
acf(detrend1)
pacf(detrend1)
plot(arima1)
?forecast.Arima
forecast(arima1,h=10,level=0.95)
plot(prediction)
autoplot(predictions)
futurVal <- forecast(arima_chosen,h=13, level=c(95))
plot(futurVal,xlim=c(180,210))
autoplot(forecast(arima1,h=10,level=0.95))
autoplot(forecast(detrend1,h=10,level=0.95))
# ARIMA
data_ts <- ts(data_daily$daily_cases, start=1, end=199)
plot(data_ts)
par(mfrow=c(1,1))
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
detrend1 <- data_ts[7:199]-mod1$fitted.values
m1 <- auto.arima(detrend1,trace=TRUE)
autoplot(forecast(m1,h=10,level=0.95))
# We start from the original time series data, since the differencing is applied within ARIMA
train_data_arima = window(AirPassengers, end = c(1957,12))
test_data_arima = window(AirPassengers, start = c(1958,1))
arima_model <- arima(train_data_arima, order=c(2, 1, 0), seasonal=list(order=c(2, 1, 0), period = 12))
arima_forecast = forecast(arima_model, n=36, level = c(80, 95))
plot(arima_forecast)
lines(test_data_arima, col='red')
model <- arima(data_ts,order=c(2,2,1))
autoplot(forecast(model,h=10,level=0.95))
arima_model <- arima(train_data_arima, order=c(2, 1, 0), seasonal=list(order=c(2, 1, 0), period = 12))
arima_forecast = forecast(arima_model, n=36, level = c(80, 95))
plot(arima_forecast)
model <- arima(data_ts,order=c(2,2,1))
autoplot(forecast(model,n=10,level=0.95))
model <- arima(data_ts,order=c(2,2,1))
autoplot(forecast(model,n=10,level=c(0.80,0.95)))
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
# ARIMA
data_ts <- ts(data_daily$daily_cases, start=1, end=199)
plot(data_ts)
model <- arima(data_ts,order=c(2,2,1))
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
?arima
model <- arima(data_ts,order=c(2,2,1),seasonal=list(order=c(2, 2, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(4,2,3),seasonal=list(order=c(2, 2, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(1,0,3),seasonal=list(order=c(2, 2, 1), period = 7) )
model <- arima(data_ts,order=c(1,2,3),seasonal=list(order=c(2, 2, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(1,2,1),seasonal=list(order=c(1, 2, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(0,1,1),seasonal=list(order=c(0, 1, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(0,1,0),seasonal=list(order=c(0, 1, 0), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(0,0,0),seasonal=list(order=c(0, 0, 0), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(1,0,0),seasonal=list(order=c(1, 0, 0), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(1,1,0),seasonal=list(order=c(1, 1, 0), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(0,0,1),seasonal=list(order=c(0, 0, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(0,0,3),seasonal=list(order=c(0, 0, 3), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(2,1,1),seasonal=list(order=c(2, 1, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
model <- arima(data_ts,order=c(2,2,1),seasonal=list(order=c(2, 2, 1), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
detrend2 <- diff(data_ts,lag=1,diff=1)
plot(detrend1,main="remove trend",type="l")
plot(detrend2,main="differentiate",type="l")
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
detrend1 <- data_ts[7:199]-mod1$fitted.values
n <- ndiffs(data_ts)
detrend2 <- diff(data_ts,lag=1,diff=1)
detrend2
par(mfrow=c(1,2))
plot(detrend1,main="remove trend",type="l")
plot(detrend2,main="differentiate",type="l")
detrend1 <- data_ts[7:199]-mod1$fitted.values
n <- ndiffs(data_ts)
detrend2 <- diff(data_ts,lag=1,diff=2)
detrend2
par(mfrow=c(1,2))
plot(detrend1,main="remove trend",type="l")
plot(detrend2,main="differentiate",type="l")
# ARIMA
data_ts <- ts(data_daily$daily_cases, start=1, end=199)
plot(data_ts)
m <- auto.arima(data_ts,trace=TRUE)
model <- arima(data_ts,order=c(3,1,3),seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=10,level=c(0.80,0.95)),xlim=c(150,220))
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases, start=1, end=199)
# ARIMA
data_ts <- ts(data_daily$daily_cases, start=1, end=199)
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(3,1,3))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:194], start=1, end=194)
plot(data_ts)
par(mfrow=c(1,1))
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:195])
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:196])
plot(data_ts)
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:196])
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:196])
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:199])
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
# ARIMA
data_ts <- ts(data_daily$daily_cases[1:197])
plot(data_ts)
# weekly seasonality
data_ts <- SMA(data_ts,n=7)
plot(data_ts,main="deseasonalized serie")
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
model <- arima(data_ts,order=c(2,4,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
model <- arima(data_ts,order=c(2,1,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
model <- arima(data_ts,order=c(2,3,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
model <- arima(data_ts,order=c(2,4,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
model <- arima(data_ts,order=c(2,3,1))#,seasonal=list(order=c(3, 1, 3), period = 7) )
autoplot(forecast(model,n=30,level=c(0.80,0.95)))
####################################################
n=10
p=2
sigmoid <- function(x,n,p) {
n / (1 + exp(-(x-p)))
}
x <- 0:100
plot(x,sigmoid(x,n,p))
x <- 0:10
plot(x,sigmoid(x,n,p))
####################################################
n=10
p=10
sigmoid <- function(x,n,p) {
n / (1 + exp(-(x-p)))
}
x <- 0:10
plot(x,sigmoid(x,n,p))
x <- 0:20
plot(x,sigmoid(x,n,p))
####################################################
n=10
p=10
sigmoid <- function(x,n,p) {
n / (1 + exp(-(x-p)/2))
}
x <- 0:20
plot(x,sigmoid(x,n,p))
####################################################
data_daily$cumulative <- cumsum(data_daily$avg_cases)
####################################################
data_daily$cumulative[7:199] <- cumsum(data_daily$avg_cases[7:199])
####################################################
data_daily$cumulative <- cumsum(data_daily$daily_cases)
plot(data_daily$cumulative)
plot(data_daily$cumulative,type="l")
time_max <- data_daily$time[max(data_daily$daily_cases)]
time_max
max(data_daily$daily_cases)
time_max <- data_daily$time[data_daily$daily_cases==max(data_daily$daily_cases)]
time_max
library(nls)
install.packages("nls")
model <- nls(cumulative~SSlogis(time),data=data_daily)
model <- nls(cumulative~SSlogis(time,xmid=time_max),data=data_daily)
?SSlogis
model <- nls(cumulative~SSlogis(log(conc), Asym, xmid, scal),data=data_daily)
model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
model
model$call
model$convInfo
coef(model)
x <- 0:220
plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]))
plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
points(data_daily$time,data_daily$cumulative,col=2)
points(data_daily$time,data_daily$cumulative,col=2,pch=12)
points(data_daily$time,data_daily$cumulative,col=2,pch=1)
plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=1)
points(data_daily$time,data_daily$cumulative,col=2,pch=2)
plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
x <- 0:400
plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
?nls
install.packages("flexsurv")
library(flexsurv)
?Gompertz
#model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
model <- nls(cumulative~pgompertz(time,shape,rate),data=data_daily)
coef(model)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,1,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,1,0.1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,0.1))
x <- (0:400)/40
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,0.1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,1))
x <- (0:200)/40
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,1))
?Gompertz
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,2))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.2,1))
x <- (-100:200)/40
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.2,1))
x <- (1:200)/40
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.2,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,10,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,10,2))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.01,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.001,1))
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,1,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.1,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,dgompertz(x,0.1,1))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,dgompertz(x,0.4,10))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.4,10))
x <- (1:200)/200
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,pgompertz(x,0.4,10))
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
#model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
model <- nls(cumulative~alpha*exp(-beta*exp(-k*cumulative)),data=data_daily)
#model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
alpha <- 25000
beta <- time_max
k <- 0.5
model <- nls(cumulative~alpha*exp(-beta*exp(-k*cumulative)),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
#model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
alpha <- 500000
beta <- 180
k <- 0.005
model <- nls(cumulative~alpha*exp(-beta*exp(-k*cumulative)),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
coef(model)
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,gomp(x,coef(model)[1],coef(model)[2],coef(model)[3]))
x <- (1:200)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,gomp(x,coef(model)[1],coef(model)[2],coef(model)[3]))
coef(model)
beta <- 0
k <- 0.005
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
beta <- 10
k <- 0.005
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
beta <- 100
k <- 0.005
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
coef(model)
x <- (1:200)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,gomp(x,coef(model)[1],coef(model)[2],coef(model)[3]))
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,gomp(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
#plot(x,SSlogis(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l")
plot(x,gomp(x,coef(model)[1],coef(model)[2],coef(model)[3]),type="l",ylim=c(1000,7000))
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
beta <- 4000
k <- 0.005
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
coef(model)
#model <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
alpha <- 500000
beta <- 180
k <- 4000
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
k <- 3500
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
plot(x,gomp(x,100,30,0.004))
plot(x,gomp(x,100,30,0.04))
plot(x,gomp(x,100,30,0.04),type="l")
model_log <- nls(cumulative~SSlogis(time, Asym, xmid, scal),data=data_daily)
coef(model_log)
alpha <- 300000
alpha <- 300000
beta <- 180
k <- 0.5
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
plot(x,gomp(x,300000,180,0.04),type="l")
x <- (1:300)
plot(x,gomp(x,300000,180,0.04),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
plot(x,gomp(x,300000,200,0.04),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
plot(x,gomp(x,300000,200,0.02),type="l")
plot(x,gomp(x,300000,200,0.03),type="l")
points(data_daily$time,data_daily$cumulative,col=2,pch=20)
alpha <- 300000
beta <- 200
k <- 0.03
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,alpha,beta,k),data=data_daily,
start = list(alpha = alpha, beta = beta, k = k), control = list(maxiter = 500))
log(300000)
#alpha <- 300000
beta <- 200
k <- 0.03
gomp <- function(data,beta,k){
return(exp(-beta*exp(-k*data)))
}
plot(x,gomp(x,200,0.03),type="l")
model <- nls(cumulative~gomp(cumulative,beta,k),data=data_daily,
start = list( beta = beta, k = k), control = list(maxiter = 500))
#alpha <- 300000
beta <- 212
k <- 0.03
gomp <- function(data,beta,k){
return(exp(-beta*exp(-k*data)))
}
model <- nls(cumulative~gomp(cumulative,beta,k),data=data_daily,
start = list( beta = beta, k = k), control = list(maxiter = 500))
log(212)
k <- 5
gomp <- function(data,k){
return(exp(-exp(-k*data)))
}
plot(x,gomp(x,5),type="l")
model <- nls(cumulative~SSgompertz(cumulative,Asym,b2,b3),data=data_daily, control = list(maxiter = 500))
model <- nls(cumulative~SSgompertz(log(cumulative),Asym,b2,b3),data=data_daily, control = list(maxiter = 500))
model <- nls(cumulative~SSgompertz(cumulative,Asym,b2,b3),data=data_daily, control = list(maxiter = 500))
gomp <- function(data,beta,k){
return(exp(-beta*exp(-k*data)))
}
plot(x,gomp(x,200,0.03),type="l")
local({  Asym <- 4.5; b2 <- 2.3; b3 <- 0.7
SSgompertz(data_daily$cumulative, Asym, b2, b3) # response _and_ gradient
})
local({  Asym <- 300000; b2 <- 180; b3 <- 0.03
SSgompertz(data_daily$cumulative, Asym, b2, b3) # response _and_ gradient
})
sample <- []
sample <- gomp(1:200)
sample <- gomp(1:200,212,0.03)
points(x,sample,col=2)
x <- 1:200
sample <- gomp(x,212,0.03)
points(x,sample,col=2)
model <- nlm(sample~SSgompertz(x,Asym,b2,b3))
model <- nls(sample~SSgompertz(x,Asym,b2,b3))
model <- nls(sample~SSgompertz(x,Asym,b2,b3),control = list(maxiter = 500))
?nls
?nls
gomp <- function(data,alpha,beta,k){
return(alpha*exp(-beta*exp(-k*data)))
}
x <- 1:200
sample <- gomp(x,500,212,0.03)
points(x,sample,col=2)
x <- 1:200
sample <- gomp(x,500,212,0.03)
plot(x,gomp(x,500,200,0.03),type="l")
points(x,sample,col=2)
model <- nls(sample~SSgompertz(x,Asym,b2,b3),start=list(Asym=450,b2=200,b3=0.05),control = list(maxiter = 500))
plot(x,gomp(x,500,150,0.03),type="l")
plot(x,gomp(x,500,150,0.04),type="l")
model <- nls(sample~gomp(x,450,200,0.035),start=list(Asym=450,b2=200,b3=0.05),control = list(maxiter = 500))
model <- nls(sample~gomp(x,alpha,beta,k),start=list(alpha=450,beta=200,k=0.05),control = list(maxiter = 500))
coef(model)
x <- 1:200
sample <- pgompertz(x,0.1,1)
plot(x,sample)
plot(x,sample,type="l")
sample <- pgompertz(x,0.1,10)
plot(x,sample,type="l")
x <- 1:200/40
sample <- pgompertz(x,0.1,1)
plot(x,sample,type="l")
sample <- pgompertz(x,0.01,1)
plot(x,sample,type="l")
sample <- pgompertz(x,0.001,1)
plot(x,sample,type="l")
sample <- pgompertz(x,1,0.001)
plot(x,sample,type="l")
sample <- pgompertz(x,1,0.01)
plot(x,sample,type="l")
sample <- pgompertz(x,1,0.03)
plot(x,sample,type="l")
sample <- pgompertz(x,1,0.01)
plot(x,sample,type="l")
sample <- pgompertz(x,1,0.03)
plot(x,sample,type="l")
x <- 1:200/40
sample <- dgompertz(x,1,0.03)
plot(x,sample,type="l")
sample <- dgompertz(x,2,0.03)
plot(x,sample,type="l")
sample <- dgompertz(x,1,0.03)
sample <- dgompertz(x,1,0.03)
plot(x,sample,type="l")
